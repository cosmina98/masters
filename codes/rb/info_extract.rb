# This file contains the code used to extract info from the different outputs
# generated by UKP solving programs.

# For when there's a field whose value is after '<field>: '.
def get_field(lines, field)
  lines.grep(/^#{field}: .*/).each { | l | l.match(/: (.*)/)[1] }
end

# For when there's a field whose value is in the next line.
def get_hfield(lines, field)
  lines[lines.find_index(field) + 1]
end

# By default, global variables without the '$' aren't exported when the code is
# required by other files. So this don't pollute the global namespace of files
# that require this code.
ukp5_labels = ['Seconds', 'ext_time', 'ext_mem', 'opt']
pya_labels = ['Total Time ', 'ext_time', 'ext_mem',
              '#The optimal value for the given capacity']
ukp5_gatherers_ = ukp5_labels.map { | l | lambda { | ls | get_field(ls, l) } }
pya_gatherers_ = [lambda { | ls | get_field(ls, pya_labels[0]) },
                 lambda { | ls | get_field(ls, pya_labels[1]) },
                 lambda { | ls | get_field(ls, pya_labels[2]) },
                 lambda { | ls | get_hfield(ls, pya_labels[3]) }]

# Making those unmodifiable, to avoid surprises when passing them by reference.
vars = [ukp5_labels, pya_labels, ukp5_gatherers_, pya_gatherers_]
vars.each do | a | 
  a.each do | v |
    v.freeze
  end
  a.freeze
end

def ukp5_gatherers
  ukp5_gatherers_
end

def pya_gatherers
  pya_gatherers_
end


