\chapter{Introduction}

the first thing after the abstract that they will read

\section{Motivation}

our first motivation was finding the best method for solving the cutting stock subproblem
	the works of the area focused the CSP itself, the study of the subproblem was one in its own, that no author have taken time to do
we found that a large amount of previous work was ignored because of lack of implementations
we found that a simple DP algorithm beaten the state-of-art-algorithm
we found that the algorithm was very similar to one of the first algorithms created for this problem
the motivation shifted to making a literature review
this work answers the first question and makes a critical analysis of the UKP literature

\section{Scope}

Exact methods, we know that approximations exist, but the study of how much is possible to approximate without making the CSP solution inexact

\section{Formulation and Notation}

PUT MODEL HERE

Say solution is a multiset, will be used in the dominance section below

\section{Well-known properties of UKP}

\subsection{Dominance}

If one item \(i\) has the same or less weight than another item \(j\), and \(i\) also has the same or more profit value than item \(j\), then it's clear that if we replace \(j\) by \(i\) in any valid solution, the solution will remain valid (the weight of the solution can only remain the same or decrease), and the profit value of the solution can only remain the same or increases. This relationship between \(i\) and \(j\) is called a dominance relation; more specifically, we can say that \(i\) dominates \(j\). It's important to note that, as UKP don't limit the quantity of each item type in a solution, we can always do these replacements (what's not true for other KP variants).

Let's suppose that \(i\) dominates \(j\); we have two possibilities: the profit value of \(i\) is greater than the profit value of \(j\), or they are the same. If it's the former, then \(j\) can't be part of an optimal solution. By definition, an optimal solution is a valid solution with the greatest profit value; if \(j\) was part of an optimal solution, replacing \(j\) by \(i\) would give an also valid solution with an even greater profit value (\emph{reductio ad absurdum}). If it's the latter (i.e. \(i\) and \(j\) have the same profit value), \(j\) can be part of an optimal solution. However, we would get an optimal solution with the same or less weight, by replacing \(j\) by \(i\) in the optimal solution.

If we are interested in obtaining one optimal solution, but not all optimal solutions, we can use dominance relations to reduce the computational effort needed to find a solution. This is done by detecting dominance relations, and removing the dominated items, thus reducing the size of the problem (e.g. numbers of items). The detection can be done in a preprocessing phase by an algorithm for dominance detection, or within the solving algorithm (reusing computation that it would need to done anyway). Both approachs have upsides and downsides, some of them will be discussed further in this work.

Dominance relations become more interesting after we perceive that they can be apllied to item multisets (solutions), and not only to individual items. Again, as UKP don't limit the quantity of each item type in a solution, we can treat any solution as a new item type, with weight and profit value equal to the weight and profit value of the solution.

If a solution \(s\) dominates an item \(j\), we have the same properties that if \(s\) was an item. Whenever we would use \(j\), we can use the items that comprise \(s\) in place of \(j\). In the literature, such dominance relation is called \emph{collective dominance}. Special cases of the collective dominance are the \emph{multiple and simple} dominances. Our example could be regarded as simple dominance if \(s\) was comprised of one single copy of one item (as the first example of this section); and could be regarded as multiple dominance if \(s\) was comprised of multiple copies of the same item (without any other item types). Simple dominance can be seen as a special case of multiple dominance, and some authors use `multiple dominance' to refer to both\cite{hybrid}.

If a solution \(s\) dominates a solution \(t\), and \(t\) is made only of copies of the same item, we have what's called in the literature of \emph{threshold dominance}. If \(t\) is made of \(n\) copies of item \(j\), then we know that we can diregard solutions with more than \(n - 1\) copies of item \(j\) (as each group of \(n\) copies of \(j\) can be replaced by \(s\) without loss). Depending on the solving algorithm, this can mean that at some point of the algorithm, the item can be excluded from a global item list (reducing the further computational effort of the algorithm). Collective dominance can be seen as a special case of threshold dominance, where \(n = 1\).

All dominances until
If one solution has the same or less weight than another solution, and has the same or more profit than that solution, it's clear that the first solution 

cite the pisinger book (or thesis?) to say that many methods were studied for simple/multiple dominance, including some heuristics that don't remove all dominances but don't have an \(O(n^2)\) complexity too. 

\subsubsection{The four item dominances}
get figure here
\subsubsection{Solution dominance}

It would be expected that UKP being an NP-hard 

\subsection{Periodicity}

